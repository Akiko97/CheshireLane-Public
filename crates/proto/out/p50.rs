// This file is @generated by prost-build.
#[derive(proto_derive::CmdID)]
#[cmdid(50015)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc50015 {
    #[prost(message, repeated, tag = "1")]
    pub player_list: ::prost::alloc::vec::Vec<PlayerInfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50102)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs50102 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
    #[prost(string, required, tag = "2")]
    pub content: ::prost::alloc::string::String,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FriendInfo {
    #[prost(uint32, required, tag = "6")]
    pub pre_online_time: u32,
    #[prost(message, optional, tag = "7")]
    pub display: ::core::option::Option<super::common::Displayinfo>,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(string, required, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "3")]
    pub lv: u32,
    #[prost(string, required, tag = "4")]
    pub adv: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "5")]
    pub online: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PlayerInfo {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "3")]
    pub lv: u32,
    #[prost(string, required, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "4")]
    pub display: ::core::option::Option<super::common::Displayinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50103)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc50103 {
    #[prost(uint32, required, tag = "1")]
    pub ad_id: u32,
    #[prost(message, repeated, tag = "2")]
    pub arg_list: ::prost::alloc::vec::Vec<AdArg>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50009)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs50009 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50011)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs50011 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50105)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs50105 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(string, required, tag = "2")]
    pub content: ::prost::alloc::string::String,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50104)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc50104 {
    #[prost(message, required, tag = "1")]
    pub msg: MsgInfo,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50109)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs50109 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MsgInfo {
    #[prost(uint32, required, tag = "1")]
    pub timestamp: u32,
    #[prost(message, required, tag = "2")]
    pub player: PlayerInfo,
    #[prost(string, required, tag = "3")]
    pub content: ::prost::alloc::string::String,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50114)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc50114 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, required, tag = "2")]
    pub player: PlayerInfo,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50113)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs50113 {
    #[prost(uint32, required, tag = "1")]
    pub user_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50017)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc50017 {
    #[prost(message, repeated, tag = "3")]
    pub black_list: ::prost::alloc::vec::Vec<PlayerInfo>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DetailInfo {
    #[prost(uint32, required, tag = "3")]
    pub title: u32,
    #[prost(uint32, required, tag = "6")]
    pub collection_count: u32,
    #[prost(uint32, required, tag = "13")]
    pub online: u32,
    #[prost(uint32, required, tag = "7")]
    pub pvp_attack_count: u32,
    #[prost(uint32, required, tag = "8")]
    pub pvp_win_count: u32,
    #[prost(string, required, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, required, tag = "12")]
    pub adv: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "4")]
    pub lv: u32,
    #[prost(uint32, required, tag = "9")]
    pub collect_attack_count: u32,
    #[prost(uint32, required, tag = "5")]
    pub ship_count: u32,
    #[prost(uint32, required, tag = "10")]
    pub attack_count: u32,
    #[prost(uint32, required, tag = "14")]
    pub pre_online_time: u32,
    #[prost(uint32, required, tag = "15")]
    pub score: u32,
    #[prost(uint32, required, tag = "11")]
    pub win_count: u32,
    #[prost(message, optional, tag = "17")]
    pub display: ::core::option::Option<super::common::Displayinfo>,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, repeated, packed = "false", tag = "16")]
    pub medal_id: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50014)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs50014 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50106)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc50106 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50002)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc50002 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, optional, tag = "2")]
    pub player: ::core::option::Option<DetailInfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50012)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc50012 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50008)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc50008 {
    #[prost(message, required, tag = "1")]
    pub player: FriendInfo,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AdArg {
    #[prost(uint32, optional, tag = "3")]
    pub int: ::core::option::Option<u32>,
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
    #[prost(string, optional, tag = "2")]
    pub string: ::core::option::Option<::prost::alloc::string::String>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50108)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc50108 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50007)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc50007 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50107)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs50107 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50004)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc50004 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50110)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc50110 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50013)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc50013 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50111)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs50111 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(string, required, tag = "2")]
    pub info: ::prost::alloc::string::String,
    #[prost(string, required, tag = "3")]
    pub content: ::prost::alloc::string::String,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50115)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc50115 {
    #[prost(uint32, required, tag = "1")]
    pub timestamp: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50000)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc50000 {
    #[prost(message, repeated, tag = "2")]
    pub request_list: ::prost::alloc::vec::Vec<MsgInfo>,
    #[prost(message, repeated, tag = "1")]
    pub friend_list: ::prost::alloc::vec::Vec<FriendInfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50001)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs50001 {
    #[prost(string, required, tag = "2")]
    pub keyword: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50112)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc50112 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50005)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc50005 {
    #[prost(message, required, tag = "1")]
    pub msg: MsgInfo,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50010)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc50010 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50016)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs50016 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50101)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc50101 {
    #[prost(string, required, tag = "3")]
    pub content: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "2")]
    pub r#type: u32,
    #[prost(message, required, tag = "1")]
    pub player: PlayerInfo,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50006)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs50006 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(50003)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs50003 {
    #[prost(string, required, tag = "2")]
    pub content: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}