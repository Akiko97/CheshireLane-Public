// This file is @generated by prost-build.
#[derive(proto_derive::CmdID)]
#[cmdid(30003)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc30003 {
    #[prost(message, repeated, tag = "1")]
    pub mail_list: ::prost::alloc::vec::Vec<MailInfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30001)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc30001 {
    #[prost(uint32, required, tag = "1")]
    pub unread_number: u32,
    #[prost(uint32, required, tag = "2")]
    pub total_number: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30014)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs30014 {
    #[prost(uint32, repeated, packed = "false", tag = "1")]
    pub id_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30016)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs30016 {
    #[prost(uint32, required, tag = "1")]
    pub item_id: u32,
    #[prost(uint32, required, tag = "2")]
    pub groupid: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MailSimpleInfo {
    #[prost(string, required, tag = "4")]
    pub content: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub date: u32,
    #[prost(message, repeated, tag = "5")]
    pub attachment_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(string, required, tag = "3")]
    pub title: ::prost::alloc::string::String,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30008)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs30008 {
    #[prost(uint32, required, tag = "1")]
    pub mail_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30015)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc30015 {
    #[prost(message, repeated, tag = "2")]
    pub mail_title_list: ::prost::alloc::vec::Vec<MailTitle>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MailInfo {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(message, repeated, tag = "5")]
    pub attachment_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(uint32, required, tag = "2")]
    pub date: u32,
    #[prost(uint32, required, tag = "7")]
    pub read_flag: u32,
    #[prost(uint32, required, tag = "8")]
    pub imp_flag: u32,
    #[prost(string, required, tag = "3")]
    pub title: ::prost::alloc::string::String,
    #[prost(string, required, tag = "4")]
    pub content: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "6")]
    pub attach_flag: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TimeRewardInfo {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(string, required, tag = "4")]
    pub text: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "2")]
    pub timestamp: u32,
    #[prost(uint32, required, tag = "7")]
    pub send_time: u32,
    #[prost(message, repeated, tag = "5")]
    pub attachment_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(uint32, required, tag = "6")]
    pub attach_flag: u32,
    #[prost(string, required, tag = "3")]
    pub title: ::prost::alloc::string::String,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30011)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc30011 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30005)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc30005 {
    #[prost(message, repeated, tag = "1")]
    pub mail_list: ::prost::alloc::vec::Vec<MailSimpleInfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30013)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc30013 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30009)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc30009 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30002)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs30002 {
    #[prost(uint32, required, tag = "2")]
    pub index_begin: u32,
    #[prost(uint32, required, tag = "3")]
    pub index_end: u32,
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30101)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc30101 {
    #[prost(uint32, required, tag = "1")]
    pub number: u32,
    #[prost(uint32, required, tag = "2")]
    pub max_timestamp: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30004)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs30004 {
    #[prost(uint32, required, tag = "2")]
    pub index_end: u32,
    #[prost(uint32, required, tag = "1")]
    pub index_begin: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30017)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc30017 {
    #[prost(uint32, repeated, packed = "false", tag = "1")]
    pub years: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30018)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs30018 {
    #[prost(uint32, optional, tag = "2")]
    pub year: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "3")]
    pub groupid: ::core::option::Option<u32>,
    #[prost(uint32, required, tag = "1")]
    pub item_id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MailTitle {
    #[prost(string, required, tag = "2")]
    pub title: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30019)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc30019 {
    #[prost(uint32, required, tag = "1")]
    pub ret: u32,
    #[prost(message, repeated, tag = "2")]
    pub drop_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30102)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs30102 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30104)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs30104 {
    #[prost(uint32, required, tag = "1")]
    pub reward_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30010)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs30010 {
    #[prost(uint32, required, tag = "1")]
    pub arg: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MatchExpression {
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub arg_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30007)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc30007 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "3")]
    pub drop_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub mail_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "4")]
    pub unread_number: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30105)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc30105 {
    #[prost(uint32, required, tag = "3")]
    pub number: u32,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub drop_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(uint32, required, tag = "4")]
    pub max_timestamp: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30012)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs30012 {
    #[prost(uint32, required, tag = "2")]
    pub gold: u32,
    #[prost(uint32, required, tag = "1")]
    pub oil: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30103)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc30103 {
    #[prost(message, repeated, tag = "1")]
    pub time_reward_list: ::prost::alloc::vec::Vec<TimeRewardInfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(30006)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs30006 {
    #[prost(message, repeated, tag = "2")]
    pub match_list: ::prost::alloc::vec::Vec<MatchExpression>,
    #[prost(uint32, required, tag = "1")]
    pub cmd: u32,
}