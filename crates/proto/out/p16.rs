// This file is @generated by prost-build.
#[derive(proto_derive::CmdID)]
#[cmdid(16101)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc16101 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub ship_list: ::prost::alloc::vec::Vec<super::common::Shipinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(16200)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc16200 {
    #[prost(uint32, required, tag = "4")]
    pub month: u32,
    #[prost(message, repeated, tag = "3")]
    pub normal_shop_list: ::prost::alloc::vec::Vec<Shopinfo>,
    #[prost(message, repeated, tag = "1")]
    pub core_shop_list: ::prost::alloc::vec::Vec<Shopinfo>,
    #[prost(message, repeated, tag = "2")]
    pub blue_shop_list: ::prost::alloc::vec::Vec<Shopinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(16109)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc16109 {
    #[prost(message, repeated, tag = "2")]
    pub drop_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(16104)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs16104 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(16100)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs16100 {
    #[prost(uint32, required, tag = "1")]
    pub cnt: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(16002)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc16002 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub drop_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(16204)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc16204 {
    #[prost(uint32, required, tag = "1")]
    pub ret: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SelectedInfo {
    #[prost(uint32, required, tag = "2")]
    pub count: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(16107)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc16107 {
    #[prost(message, repeated, tag = "3")]
    pub good_list: ::prost::alloc::vec::Vec<GoodsInfo>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(uint32, required, tag = "2")]
    pub item_flash_time: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(16202)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc16202 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub drop_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(16206)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc16206 {
    #[prost(uint32, required, tag = "1")]
    pub ret: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(16001)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs16001 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub number: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct GoodsInfo {
    #[prost(uint32, required, tag = "2")]
    pub count: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(16203)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs16203 {
    #[prost(uint32, required, tag = "1")]
    pub flag: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(16201)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs16201 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
    #[prost(uint32, required, tag = "2")]
    pub id: u32,
    #[prost(uint32, required, tag = "3")]
    pub count: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(16108)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs16108 {
    #[prost(uint32, required, tag = "1")]
    pub flash_time: u32,
    #[prost(message, repeated, tag = "3")]
    pub selected: ::prost::alloc::vec::Vec<SelectedInfo>,
    #[prost(uint32, required, tag = "2")]
    pub shopid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(16105)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc16105 {
    #[prost(uint32, repeated, packed = "false", tag = "1")]
    pub first_pay_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "3")]
    pub normal_list: ::prost::alloc::vec::Vec<Shopinfo>,
    #[prost(message, repeated, tag = "4")]
    pub normal_group_list: ::prost::alloc::vec::Vec<Shopinfo>,
    #[prost(message, repeated, tag = "2")]
    pub pay_list: ::prost::alloc::vec::Vec<Shopinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(16106)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs16106 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Shopinfo {
    #[prost(uint32, required, tag = "1")]
    pub shop_id: u32,
    #[prost(uint32, required, tag = "2")]
    pub pay_count: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(16205)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs16205 {
    #[prost(uint32, required, tag = "2")]
    pub cost_type: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}