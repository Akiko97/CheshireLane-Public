// This file is @generated by prost-build.
#[derive(proto_derive::CmdID)]
#[cmdid(25031)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc25031 {
    #[prost(uint32, required, tag = "3")]
    pub commander_level: u32,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(uint32, required, tag = "4")]
    pub commander_exp: u32,
    #[prost(uint32, required, tag = "2")]
    pub time: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25014)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs25014 {
    #[prost(uint32, required, tag = "1")]
    pub commanderid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25019)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc25019 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub awards: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25001)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc25001 {
    #[prost(message, repeated, tag = "2")]
    pub r#box: ::prost::alloc::vec::Vec<Commanderboxinfo>,
    #[prost(uint32, required, tag = "3")]
    pub usage_count: u32,
    #[prost(message, repeated, tag = "1")]
    pub commanders: ::prost::alloc::vec::Vec<super::common::Commanderinfo>,
    #[prost(message, repeated, tag = "4")]
    pub presets: ::prost::alloc::vec::Vec<Presetfleet>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25037)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs25037 {
    #[prost(uint32, required, tag = "3")]
    pub affect_cnt: u32,
    #[prost(uint32, required, tag = "1")]
    pub item_cnt: u32,
    #[prost(uint32, required, tag = "2")]
    pub finish_cnt: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25032)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs25032 {
    #[prost(uint32, required, tag = "1")]
    pub slotidx: u32,
    #[prost(uint32, required, tag = "2")]
    pub styleidx: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Commanderhomeslot {
    #[prost(uint32, required, tag = "4")]
    pub commander_id: u32,
    #[prost(uint32, required, tag = "8")]
    pub cache_exp: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, optional, tag = "6")]
    pub commander_level: ::core::option::Option<u32>,
    #[prost(uint32, required, tag = "3")]
    pub exp_time: u32,
    #[prost(uint32, required, tag = "2")]
    pub op_flag: u32,
    #[prost(uint32, required, tag = "5")]
    pub style: u32,
    #[prost(uint32, optional, tag = "7")]
    pub commander_exp: ::core::option::Option<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25026)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs25026 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25034)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs25034 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25005)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc25005 {
    #[prost(message, required, tag = "2")]
    pub commander: super::common::Commanderinfo,
    #[prost(uint32, required, tag = "3")]
    pub finish_time: u32,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25006)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs25006 {
    #[prost(uint32, required, tag = "3")]
    pub commanderid: u32,
    #[prost(uint32, required, tag = "2")]
    pub pos: u32,
    #[prost(uint32, required, tag = "1")]
    pub groupid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25004)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs25004 {
    #[prost(uint32, required, tag = "1")]
    pub boxid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25012)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs25012 {
    #[prost(uint32, required, tag = "3")]
    pub replaceid: u32,
    #[prost(uint32, required, tag = "1")]
    pub commanderid: u32,
    #[prost(uint32, required, tag = "2")]
    pub targetid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25023)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc25023 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25033)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc25033 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25008)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs25008 {
    #[prost(uint32, required, tag = "1")]
    pub targetid: u32,
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub materialid: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25011)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc25011 {
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub abilityid: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25007)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc25007 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25029)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc25029 {
    #[prost(uint32, required, tag = "5")]
    pub op_time: u32,
    #[prost(uint32, required, tag = "3")]
    pub exp: u32,
    #[prost(message, repeated, tag = "4")]
    pub awards: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(uint32, required, tag = "2")]
    pub level: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25038)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc25038 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25036)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs25036 {
    #[prost(uint32, required, tag = "1")]
    pub is_open: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25035)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc25035 {
    #[prost(message, repeated, tag = "1")]
    pub box_list: ::prost::alloc::vec::Vec<Commanderboxinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25020)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs25020 {
    #[prost(string, required, tag = "1")]
    pub name: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "2")]
    pub commanderid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25010)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs25010 {
    #[prost(uint32, required, tag = "1")]
    pub commanderid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25015)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc25015 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25028)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs25028 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25017)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc25017 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25016)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs25016 {
    #[prost(uint32, required, tag = "1")]
    pub commanderid: u32,
    #[prost(uint32, required, tag = "2")]
    pub flag: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Commanderboxinfo {
    #[prost(uint32, required, tag = "3")]
    pub finish_time: u32,
    #[prost(uint32, required, tag = "4")]
    pub begin_time: u32,
    #[prost(uint32, required, tag = "2")]
    pub pool_id: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25009)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc25009 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25022)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs25022 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(message, repeated, tag = "2")]
    pub commandersid: ::prost::alloc::vec::Vec<super::common::Commandersinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25003)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc25003 {
    #[prost(message, required, tag = "2")]
    pub r#box: Commanderboxinfo,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25024)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs25024 {
    #[prost(string, required, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Presetfleet {
    #[prost(string, required, tag = "3")]
    pub name: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(message, repeated, tag = "2")]
    pub commandersid: ::prost::alloc::vec::Vec<super::common::Commandersinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25018)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs25018 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25027)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc25027 {
    #[prost(message, repeated, tag = "3")]
    pub slots: ::prost::alloc::vec::Vec<Commanderhomeslot>,
    #[prost(uint32, required, tag = "1")]
    pub level: u32,
    #[prost(uint32, required, tag = "4")]
    pub clean: u32,
    #[prost(uint32, required, tag = "2")]
    pub exp: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25025)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc25025 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25013)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc25013 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25021)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc25021 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25039)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc25039 {
    #[prost(message, repeated, tag = "1")]
    pub commander_list: ::prost::alloc::vec::Vec<super::common::Commanderinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25030)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs25030 {
    #[prost(uint32, required, tag = "1")]
    pub slotidx: u32,
    #[prost(uint32, required, tag = "2")]
    pub commander_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(25002)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs25002 {
    #[prost(uint32, required, tag = "1")]
    pub boxid: u32,
}