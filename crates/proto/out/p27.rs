// This file is @generated by prost-build.
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ChildPolaroid {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(message, required, tag = "2")]
    pub time: ChildTime,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27032)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc27032 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ChildPlanHistory {
    #[prost(uint32, required, tag = "2")]
    pub count: u32,
    #[prost(uint32, required, tag = "1")]
    pub plan_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27017)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27017 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub drops: ::prost::alloc::vec::Vec<ChildDrop>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChildSiteOption {
    #[prost(uint32, required, tag = "1")]
    pub site_id: u32,
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub option_ids: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ChildFavor {
    #[prost(uint32, required, tag = "1")]
    pub lv: u32,
    #[prost(uint32, required, tag = "2")]
    pub exp: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ChildItem {
    #[prost(uint32, required, tag = "2")]
    pub num: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27003)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27003 {
    #[prost(message, repeated, tag = "3")]
    pub events: ::prost::alloc::vec::Vec<ChildPlanCell>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub plan_results: ::prost::alloc::vec::Vec<ChildPlanResult>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27007)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27007 {
    #[prost(message, repeated, tag = "2")]
    pub drops: ::prost::alloc::vec::Vec<ChildDrop>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27041)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27041 {
    #[prost(uint32, required, tag = "1")]
    pub ending_id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ChildProgress {
    #[prost(uint32, required, tag = "2")]
    pub progress: u32,
    #[prost(uint32, required, tag = "1")]
    pub task_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27012)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs27012 {
    #[prost(message, repeated, tag = "1")]
    pub plans: ::prost::alloc::vec::Vec<ChildPlanCell>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChildInfo {
    #[prost(uint32, required, tag = "3")]
    pub mood: u32,
    #[prost(uint32, required, tag = "26")]
    pub new_game_plus_count: u32,
    #[prost(uint32, required, tag = "5")]
    pub site_number: u32,
    #[prost(uint32, required, tag = "4")]
    pub money: u32,
    #[prost(message, repeated, tag = "16")]
    pub buffs: ::prost::alloc::vec::Vec<ChildBuff>,
    #[prost(message, repeated, tag = "14")]
    pub tasks: ::prost::alloc::vec::Vec<ChildTask>,
    #[prost(uint32, required, tag = "19")]
    pub can_trigger_home_event: u32,
    #[prost(uint32, required, tag = "25")]
    pub is_ending: u32,
    #[prost(message, repeated, tag = "9")]
    pub plan_history: ::prost::alloc::vec::Vec<ChildPlanHistory>,
    #[prost(uint32, required, tag = "29")]
    pub is_special_secretary_valid: u32,
    #[prost(uint32, repeated, packed = "false", tag = "20")]
    pub home_events: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "6")]
    pub attrs: ::prost::alloc::vec::Vec<ChildAttr>,
    #[prost(uint32, required, tag = "27")]
    pub had_target_stage_award: u32,
    #[prost(message, repeated, tag = "11")]
    pub plans: ::prost::alloc::vec::Vec<ChildPlanCell>,
    #[prost(uint32, required, tag = "13")]
    pub target: u32,
    #[prost(uint32, repeated, packed = "false", tag = "18")]
    pub spec_events: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "12")]
    pub polaroids: ::prost::alloc::vec::Vec<ChildPolaroid>,
    #[prost(uint32, repeated, packed = "false", tag = "21")]
    pub discount_event_id: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, packed = "false", tag = "24")]
    pub favor_award_history: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, required, tag = "2")]
    pub cur_time: ChildTime,
    #[prost(message, required, tag = "7")]
    pub favor: ChildFavor,
    #[prost(message, repeated, tag = "8")]
    pub items: ::prost::alloc::vec::Vec<ChildItem>,
    #[prost(uint32, repeated, packed = "false", tag = "15")]
    pub realized_wish: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "22")]
    pub shop: ::prost::alloc::vec::Vec<ChildShopData>,
    #[prost(uint32, required, tag = "1")]
    pub tid: u32,
    #[prost(string, required, tag = "17")]
    pub user_name: ::prost::alloc::string::String,
    #[prost(uint32, repeated, packed = "false", tag = "10")]
    pub memorys: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "23")]
    pub option_records: ::prost::alloc::vec::Vec<ChildOptionRecord>,
    #[prost(uint32, required, tag = "28")]
    pub had_adjustment: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27014)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27014 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27020)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc27020 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27029)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27029 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27011)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27011 {
    #[prost(uint32, repeated, packed = "false", tag = "1")]
    pub endings: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27002)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27002 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ChildPlanVal {
    #[prost(uint32, optional, tag = "1")]
    pub plan_id: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "2")]
    pub event_id: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "3")]
    pub spec_event_id: ::core::option::Option<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27023)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27023 {
    #[prost(uint32, required, tag = "2")]
    pub system: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27013)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27013 {
    #[prost(message, repeated, tag = "2")]
    pub plans: ::prost::alloc::vec::Vec<ChildPlanCell>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27037)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs27037 {
    #[prost(uint32, required, tag = "1")]
    pub type_1: u32,
    #[prost(message, repeated, tag = "2")]
    pub progresses: ::prost::alloc::vec::Vec<ChildProgress>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27015)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27015 {
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub events: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27027)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27027 {
    #[prost(uint32, required, tag = "1")]
    pub spec_events_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27009)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc27009 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27004)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27004 {
    #[prost(uint32, required, tag = "1")]
    pub siteid: u32,
    #[prost(uint32, required, tag = "2")]
    pub optionid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27039)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27039 {
    #[prost(uint32, required, tag = "1")]
    pub attr_id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ChildTime {
    #[prost(uint32, required, tag = "3")]
    pub day: u32,
    #[prost(uint32, required, tag = "1")]
    pub month: u32,
    #[prost(uint32, required, tag = "2")]
    pub week: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChildShopData {
    #[prost(uint32, required, tag = "1")]
    pub shop_id: u32,
    #[prost(message, repeated, tag = "2")]
    pub goods: ::prost::alloc::vec::Vec<ChildShopGoods>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChildPlanResult {
    #[prost(message, repeated, tag = "3")]
    pub plan_drops: ::prost::alloc::vec::Vec<ChildDrop>,
    #[prost(message, repeated, tag = "5")]
    pub spec_event_drops: ::prost::alloc::vec::Vec<ChildDrop>,
    #[prost(uint32, required, tag = "1")]
    pub day: u32,
    #[prost(uint32, required, tag = "2")]
    pub index: u32,
    #[prost(message, repeated, tag = "4")]
    pub event_drops: ::prost::alloc::vec::Vec<ChildDrop>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27033)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs27033 {
    #[prost(message, repeated, tag = "2")]
    pub goods: ::prost::alloc::vec::Vec<ChildShopGoods>,
    #[prost(uint32, required, tag = "1")]
    pub shop_id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ChildDrop {
    #[prost(int32, required, tag = "3")]
    pub number: i32,
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
    #[prost(uint32, required, tag = "2")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27030)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc27030 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27038)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc27038 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ChildOptionRecord {
    #[prost(uint32, required, tag = "2")]
    pub count: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27047)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27047 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ChildPlanCell {
    #[prost(message, repeated, tag = "3")]
    pub value: ::prost::alloc::vec::Vec<ChildPlanVal>,
    #[prost(uint32, required, tag = "2")]
    pub index: u32,
    #[prost(uint32, required, tag = "1")]
    pub day: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27010)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27010 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27019)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27019 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ChildAttr {
    #[prost(uint32, required, tag = "2")]
    pub val: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27006)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27006 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ChildShopGoods {
    #[prost(uint32, required, tag = "2")]
    pub num: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27028)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27028 {
    #[prost(message, repeated, tag = "2")]
    pub drops: ::prost::alloc::vec::Vec<ChildDrop>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27022)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27022 {
    #[prost(uint32, repeated, packed = "false", tag = "1")]
    pub ids: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27031)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs27031 {
    #[prost(string, required, tag = "1")]
    pub name: ::prost::alloc::string::String,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27046)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27046 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub opts: ::prost::alloc::vec::Vec<ChildSiteOption>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27048)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc27048 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27016)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27016 {
    #[prost(uint32, required, tag = "1")]
    pub eventid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27042)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc27042 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ChildTask {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub progress: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27045)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27045 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27044)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27044 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, required, tag = "2")]
    pub shop_data: ChildShopData,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27001)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27001 {
    #[prost(message, required, tag = "2")]
    pub child: ChildInfo,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27036)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27036 {
    #[prost(message, repeated, tag = "2")]
    pub drops: ::prost::alloc::vec::Vec<ChildDrop>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27040)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc27040 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27000)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27000 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27035)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27035 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27008)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27008 {
    #[prost(uint32, required, tag = "1")]
    pub ending_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27043)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs27043 {
    #[prost(uint32, required, tag = "1")]
    pub shop_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27005)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27005 {
    #[prost(uint32, repeated, packed = "false", tag = "4")]
    pub events: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "2")]
    pub drops: ::prost::alloc::vec::Vec<ChildDrop>,
    #[prost(message, repeated, tag = "3")]
    pub event_drops: ::prost::alloc::vec::Vec<ChildDrop>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(uint32, required, tag = "5")]
    pub branch_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27021)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27021 {
    #[prost(message, repeated, tag = "1")]
    pub tasks: ::prost::alloc::vec::Vec<ChildTask>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27024)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27024 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub awards: ::prost::alloc::vec::Vec<ChildDrop>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27025)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27025 {
    #[prost(message, repeated, tag = "1")]
    pub tasks: ::prost::alloc::vec::Vec<ChildTask>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ChildBuff {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(message, required, tag = "2")]
    pub time: ChildTime,
}
#[derive(proto_derive::CmdID)]
#[cmdid(27034)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc27034 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub drops: ::prost::alloc::vec::Vec<ChildDrop>,
}