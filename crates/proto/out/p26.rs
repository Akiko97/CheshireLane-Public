// This file is @generated by prost-build.
#[derive(proto_derive::CmdID)]
#[cmdid(26041)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26041 {
    #[prost(uint32, required, tag = "1")]
    pub act_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26160)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs26160 {
    #[prost(uint32, optional, tag = "2")]
    pub int_value: ::core::option::Option<u32>,
    #[prost(string, optional, tag = "3")]
    pub str_value: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(uint32, required, tag = "1")]
    pub act_id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GoodsInfo {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub count: u32,
    #[prost(uint32, repeated, packed = "false", tag = "3")]
    pub bought_record: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26107)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26107 {
    #[prost(uint32, required, tag = "1")]
    pub ret: u32,
    #[prost(message, repeated, tag = "2")]
    pub item_list: ::prost::alloc::vec::Vec<PbActivityItem>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26112)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26112 {
    #[prost(message, repeated, tag = "1")]
    pub ranks: ::prost::alloc::vec::Vec<Friendscore>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26110)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26110 {
    #[prost(uint32, required, tag = "2")]
    pub time: u32,
    #[prost(uint32, required, tag = "1")]
    pub gameid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26120)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26120 {
    #[prost(message, repeated, tag = "3")]
    pub rooms: ::prost::alloc::vec::Vec<Gameroom>,
    #[prost(uint32, required, tag = "4")]
    pub pay_coin_count: u32,
    #[prost(uint32, required, tag = "5")]
    pub first_enter: u32,
    #[prost(uint32, required, tag = "2")]
    pub monthly_ticket: u32,
    #[prost(uint32, required, tag = "1")]
    pub weekly_free: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbIslandNode {
    #[prost(uint32, required, tag = "3")]
    pub is_new: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub event_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26108)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26108 {
    #[prost(uint32, required, tag = "1")]
    pub act_id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ActGoodsBuy {
    #[prost(uint32, required, tag = "1")]
    pub itemid: u32,
    #[prost(uint32, required, tag = "2")]
    pub count: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26033)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc26033 {
    #[prost(uint32, required, tag = "1")]
    pub point: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26032)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26032 {
    #[prost(uint32, required, tag = "2")]
    pub boss_hp: u32,
    #[prost(uint32, repeated, packed = "false", tag = "3")]
    pub milestones: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(uint32, required, tag = "4")]
    pub death: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cellsinfo {
    #[prost(uint32, required, tag = "1")]
    pub row: u32,
    #[prost(uint32, required, tag = "2")]
    pub column: u32,
    #[prost(uint32, required, tag = "3")]
    pub color: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26052)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26052 {
    #[prost(message, repeated, tag = "2")]
    pub items: ::prost::alloc::vec::Vec<super::common::Kvdata>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "3")]
    pub recipes: ::prost::alloc::vec::Vec<super::common::Kvdata>,
    #[prost(message, repeated, tag = "4")]
    pub slots: ::prost::alloc::vec::Vec<BuffSlot>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct BuffSlot {
    #[prost(uint32, required, tag = "2")]
    pub itemid: u32,
    #[prost(uint32, required, tag = "1")]
    pub pos: u32,
    #[prost(uint32, required, tag = "3")]
    pub itemnum: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26109)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26109 {
    #[prost(message, repeated, tag = "2")]
    pub node_list: ::prost::alloc::vec::Vec<PbIslandNode>,
    #[prost(uint32, required, tag = "1")]
    pub ret: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26158)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs26158 {
    #[prost(uint32, required, tag = "1")]
    pub act_id: u32,
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub ship_group_id: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26053)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs26053 {
    #[prost(message, repeated, tag = "3")]
    pub items: ::prost::alloc::vec::Vec<super::common::Kvdata>,
    #[prost(uint32, required, tag = "2")]
    pub recipe_id: u32,
    #[prost(uint32, required, tag = "1")]
    pub act_id: u32,
    #[prost(uint32, required, tag = "4")]
    pub times: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ActGoodsInfo {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub count: u32,
    #[prost(uint32, repeated, packed = "false", tag = "3")]
    pub bought_record: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26153)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26153 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub drop_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Keyvaluelist {
    #[prost(uint32, required, tag = "1")]
    pub key: u32,
    #[prost(message, repeated, tag = "2")]
    pub value_list: ::prost::alloc::vec::Vec<Keyvalue>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26044)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26044 {
    #[prost(message, repeated, tag = "2")]
    pub drop_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PbActivityItem {
    #[prost(uint32, required, tag = "2")]
    pub num: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26126)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26126 {
    #[prost(uint32, required, tag = "2")]
    pub times: u32,
    #[prost(uint32, required, tag = "1")]
    pub roomid: u32,
    #[prost(uint32, required, tag = "3")]
    pub score: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26054)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26054 {
    #[prost(message, repeated, tag = "2")]
    pub award_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26005)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc26005 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Keyvalue {
    #[prost(uint32, required, tag = "1")]
    pub key: u32,
    #[prost(uint32, required, tag = "2")]
    pub value: u32,
    #[prost(uint32, optional, tag = "3")]
    pub value2: ::core::option::Option<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26125)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc26125 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Gameroom {
    #[prost(uint32, required, tag = "2")]
    pub max_score: u32,
    #[prost(uint32, required, tag = "1")]
    pub roomid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26042)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26042 {
    #[prost(uint32, required, tag = "2")]
    pub start_time: u32,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(uint32, required, tag = "3")]
    pub stop_time: u32,
    #[prost(message, repeated, tag = "4")]
    pub goods: ::prost::alloc::vec::Vec<ActGoodsInfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26051)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26051 {
    #[prost(uint32, required, tag = "1")]
    pub act_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26151)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26151 {
    #[prost(message, repeated, tag = "1")]
    pub goods: ::prost::alloc::vec::Vec<GoodsInfo>,
    #[prost(uint32, required, tag = "2")]
    pub next_flash_time: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26157)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26157 {
    #[prost(uint32, optional, tag = "4")]
    pub refresh_time: ::core::option::Option<u32>,
    #[prost(uint32, required, tag = "1")]
    pub ret: u32,
    #[prost(message, repeated, tag = "2")]
    pub party_roles: ::prost::alloc::vec::Vec<PPartyRole>,
    #[prost(message, repeated, tag = "3")]
    pub special_roles: ::prost::alloc::vec::Vec<PSpecialRole>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26150)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26150 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26043)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs26043 {
    #[prost(uint32, required, tag = "2")]
    pub goodsid: u32,
    #[prost(message, repeated, tag = "3")]
    pub selected: ::prost::alloc::vec::Vec<ActGoodsBuy>,
    #[prost(uint32, required, tag = "1")]
    pub act_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26022)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26022 {
    #[prost(uint32, required, tag = "20")]
    pub love200_num: u32,
    #[prost(string, required, tag = "11")]
    pub first_lady_name: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "15")]
    pub collect_num: u32,
    #[prost(uint32, required, tag = "6")]
    pub medal_number: u32,
    #[prost(uint32, required, tag = "17")]
    pub ship_num_total: u32,
    #[prost(uint32, required, tag = "19")]
    pub ship_num_125: u32,
    #[prost(uint32, required, tag = "10")]
    pub first_lady_id: u32,
    #[prost(uint32, required, tag = "21")]
    pub skin_num: u32,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(uint32, required, tag = "8")]
    pub furniture_worth: u32,
    #[prost(uint32, required, tag = "9")]
    pub character_id: u32,
    #[prost(uint32, required, tag = "2")]
    pub register_date: u32,
    #[prost(uint32, required, tag = "16")]
    pub combat: u32,
    #[prost(string, required, tag = "3")]
    pub guild_name: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "7")]
    pub furniture_number: u32,
    #[prost(uint32, required, tag = "5")]
    pub marry_number: u32,
    #[prost(uint32, required, tag = "18")]
    pub ship_num_120: u32,
    #[prost(uint32, required, tag = "22")]
    pub skin_ship_num: u32,
    #[prost(uint32, required, tag = "12")]
    pub first_lady_time: u32,
    #[prost(uint32, required, tag = "4")]
    pub chapter_id: u32,
    #[prost(uint32, required, tag = "13")]
    pub first_online: u32,
    #[prost(uint32, required, tag = "14")]
    pub world_max_task: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26055)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs26055 {
    #[prost(uint32, required, tag = "1")]
    pub act_id: u32,
    #[prost(message, repeated, tag = "2")]
    pub slots: ::prost::alloc::vec::Vec<BuffSlot>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Minigamehub {
    #[prost(uint32, optional, tag = "4")]
    pub ultimate: ::core::option::Option<u32>,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(message, repeated, tag = "5")]
    pub maxscores: ::prost::alloc::vec::Vec<super::common::Kvdata2>,
    #[prost(uint32, optional, tag = "3")]
    pub used_cnt: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "2")]
    pub available_cnt: ::core::option::Option<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26003)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26003 {
    #[prost(message, repeated, tag = "2")]
    pub drop_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26105)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs26105 {
    #[prost(message, repeated, tag = "1")]
    pub combine: ::prost::alloc::vec::Vec<Cs26103>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Minigamedata {
    #[prost(message, repeated, tag = "3")]
    pub date1_key_value_list: ::prost::alloc::vec::Vec<Keyvaluelist>,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub datas: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26021)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26021 {
    #[prost(uint32, required, tag = "1")]
    pub act_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26129)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc26129 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Colorinfo {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub number: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26128)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26128 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26006)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26006 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub act_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26007)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc26007 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26111)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26111 {
    #[prost(uint32, required, tag = "1")]
    pub gameid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26124)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26124 {
    #[prost(uint32, required, tag = "1")]
    pub times: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26004)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs26004 {
    #[prost(message, repeated, tag = "3")]
    pub cell_list: ::prost::alloc::vec::Vec<Cellsinfo>,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub act_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26001)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26001 {
    #[prost(message, repeated, tag = "2")]
    pub cell_list: ::prost::alloc::vec::Vec<Cellsinfo>,
    #[prost(uint32, required, tag = "5")]
    pub start_time: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(message, repeated, tag = "4")]
    pub award_list: ::prost::alloc::vec::Vec<Awardinfo>,
    #[prost(message, repeated, tag = "3")]
    pub color_list: ::prost::alloc::vec::Vec<Colorinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26155)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26155 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub next_flash_time: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26122)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26122 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Awardinfo {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(message, repeated, tag = "2")]
    pub award_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26008)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26008 {
    #[prost(uint32, required, tag = "1")]
    pub act_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26127)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26127 {
    #[prost(message, repeated, tag = "2")]
    pub drop_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26152)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs26152 {
    #[prost(uint32, required, tag = "1")]
    pub goodsid: u32,
    #[prost(message, repeated, tag = "2")]
    pub selected: ::prost::alloc::vec::Vec<SelectInfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26159)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26159 {
    #[prost(message, repeated, tag = "3")]
    pub party_roles: ::prost::alloc::vec::Vec<PPartyRole>,
    #[prost(uint32, required, tag = "1")]
    pub ret: u32,
    #[prost(uint32, optional, tag = "2")]
    pub refresh_time: ::core::option::Option<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26161)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc26161 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PPartyRole {
    #[prost(uint32, required, tag = "3")]
    pub speech_bubble: u32,
    #[prost(uint32, required, tag = "2")]
    pub bubble: u32,
    #[prost(uint32, required, tag = "1")]
    pub tid: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SelectInfo {
    #[prost(uint32, required, tag = "2")]
    pub num: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Friendscore {
    #[prost(message, required, tag = "4")]
    pub display: super::common::Displayinfo,
    #[prost(uint32, required, tag = "3")]
    pub score: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(string, required, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "5")]
    pub time_data: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26002)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26002 {
    #[prost(uint32, required, tag = "2")]
    pub act_id: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26104)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26104 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, optional, tag = "4")]
    pub data: ::core::option::Option<Minigamedata>,
    #[prost(message, optional, tag = "3")]
    pub hub: ::core::option::Option<Minigamehub>,
    #[prost(message, repeated, tag = "2")]
    pub award_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26106)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26106 {
    #[prost(uint32, required, tag = "1")]
    pub act_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26031)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26031 {
    #[prost(uint32, required, tag = "1")]
    pub act_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26102)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc26102 {
    #[prost(message, repeated, tag = "1")]
    pub hubs: ::prost::alloc::vec::Vec<Minigamehub>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26103)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs26103 {
    #[prost(uint32, repeated, packed = "false", tag = "3")]
    pub args1: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "1")]
    pub hubid: u32,
    #[prost(uint32, required, tag = "2")]
    pub cmd: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26154)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26154 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26156)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26156 {
    #[prost(uint32, required, tag = "1")]
    pub act_id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PSpecialRole {
    #[prost(uint32, required, tag = "2")]
    pub state: u32,
    #[prost(uint32, required, tag = "3")]
    pub gift: u32,
    #[prost(uint32, required, tag = "1")]
    pub tid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26056)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc26056 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26123)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc26123 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(26101)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs26101 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}