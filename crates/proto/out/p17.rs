// This file is @generated by prost-build.
#[derive(proto_derive::CmdID)]
#[cmdid(17201)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs17201 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17105)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs17105 {
    #[prost(uint32, required, tag = "3")]
    pub good_or_bad: u32,
    #[prost(uint32, required, tag = "2")]
    pub discuss_id: u32,
    #[prost(uint32, required, tag = "1")]
    pub ship_group_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17607)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs17607 {
    #[prost(uint32, required, tag = "1")]
    pub shipgroup: u32,
    #[prost(uint32, required, tag = "2")]
    pub shareid: u32,
    #[prost(uint32, required, tag = "3")]
    pub report_type: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ShipDiscussInfo {
    #[prost(message, repeated, tag = "4")]
    pub discuss_list: ::prost::alloc::vec::Vec<DiscussInfo>,
    #[prost(uint32, required, tag = "1")]
    pub ship_group_id: u32,
    #[prost(uint32, required, tag = "3")]
    pub heart_count: u32,
    #[prost(uint32, required, tag = "5")]
    pub daily_discuss_count: u32,
    #[prost(uint32, required, tag = "2")]
    pub discuss_count: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17508)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc17508 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17301)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs17301 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17106)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc17106 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17102)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc17102 {
    #[prost(message, required, tag = "1")]
    pub ship_discuss: ShipDiscussInfo,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17107)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs17107 {
    #[prost(uint32, required, tag = "1")]
    pub ship_group_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17505)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs17505 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub action: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17101)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs17101 {
    #[prost(uint32, required, tag = "1")]
    pub ship_group_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17401)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs17401 {
    #[prost(uint32, repeated, packed = "false", tag = "1")]
    pub medal_id: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "2")]
    pub fixed_const: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17004)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc17004 {
    #[prost(message, required, tag = "1")]
    pub ship_info: ShipStatisticsInfo,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17302)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc17302 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(uint32, optional, tag = "2")]
    pub timestamp: ::core::option::Option<u32>,
    #[prost(message, repeated, tag = "3")]
    pub next: ::prost::alloc::vec::Vec<AchievementInfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17601)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs17601 {
    #[prost(uint32, required, tag = "1")]
    pub shipgroup: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17605)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs17605 {
    #[prost(uint32, required, tag = "2")]
    pub shareid: u32,
    #[prost(uint32, required, tag = "1")]
    pub shipgroup: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17608)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc17608 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17602)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc17602 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub infos: ::prost::alloc::vec::Vec<EqcodeShareInfo>,
    #[prost(message, repeated, tag = "3")]
    pub recent_infos: ::prost::alloc::vec::Vec<EqcodeShareInfo>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AchievementInfo {
    #[prost(uint32, required, tag = "3")]
    pub timestamp: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub progress: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17512)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc17512 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17103)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs17103 {
    #[prost(uint32, required, tag = "1")]
    pub ship_group_id: u32,
    #[prost(string, required, tag = "2")]
    pub context: ::prost::alloc::string::String,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17510)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc17510 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17002)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc17002 {
    #[prost(message, repeated, tag = "1")]
    pub progress_list: ::prost::alloc::vec::Vec<AchievementInfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17006)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc17006 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17005)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs17005 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub award_index: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17507)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs17507 {
    #[prost(uint32, required, tag = "2")]
    pub action: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17606)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc17606 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17202)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc17202 {
    #[prost(uint32, repeated, packed = "false", tag = "3")]
    pub daily_ship_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "1")]
    pub daily_vote: u32,
    #[prost(uint32, required, tag = "2")]
    pub love_vote: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17109)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs17109 {
    #[prost(string, required, tag = "3")]
    pub reason: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "1")]
    pub ship_group_id: u32,
    #[prost(uint32, required, tag = "2")]
    pub discuss_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17604)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc17604 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17506)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc17506 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ShipStatisticsAward {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub award_index: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Mulkeyvalue {
    #[prost(uint32, optional, tag = "3")]
    pub value2: ::core::option::Option<u32>,
    #[prost(uint32, required, tag = "1")]
    pub key: u32,
    #[prost(uint32, required, tag = "2")]
    pub value1: u32,
    #[prost(uint32, optional, tag = "4")]
    pub value3: ::core::option::Option<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17104)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc17104 {
    #[prost(uint32, required, tag = "3")]
    pub need_level: u32,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, optional, tag = "2")]
    pub ship_discuss: ::core::option::Option<ShipDiscussInfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17003)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc17003 {
    #[prost(uint32, repeated, packed = "false", tag = "1")]
    pub id_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17603)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs17603 {
    #[prost(uint32, required, tag = "1")]
    pub shipgroup: u32,
    #[prost(string, required, tag = "2")]
    pub eqcode: ::prost::alloc::string::String,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EqcodeShareInfo {
    #[prost(string, required, tag = "2")]
    pub eqcode: ::prost::alloc::string::String,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "4")]
    pub eval_point: u32,
    #[prost(uint32, required, tag = "3")]
    pub like: u32,
    #[prost(uint32, required, tag = "5")]
    pub state: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ShipStatisticsInfo {
    #[prost(uint32, required, tag = "4")]
    pub heart_count: u32,
    #[prost(uint32, required, tag = "2")]
    pub star: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "6")]
    pub intimacy_max: u32,
    #[prost(uint32, required, tag = "3")]
    pub heart_flag: u32,
    #[prost(uint32, required, tag = "5")]
    pub marry_flag: u32,
    #[prost(uint32, required, tag = "7")]
    pub lv_max: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17501)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs17501 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17509)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs17509 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17001)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc17001 {
    #[prost(message, repeated, tag = "4")]
    pub ship_award_list: ::prost::alloc::vec::Vec<ShipStatisticsAward>,
    #[prost(uint32, repeated, packed = "false", tag = "1")]
    pub finish_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "2")]
    pub progress_list: ::prost::alloc::vec::Vec<AchievementInfo>,
    #[prost(uint32, required, tag = "5")]
    pub daily_discuss: u32,
    #[prost(uint32, repeated, packed = "false", tag = "6")]
    pub transform_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "3")]
    pub ship_info_list: ::prost::alloc::vec::Vec<ShipStatisticsInfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17110)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc17110 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17204)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc17204 {
    #[prost(message, repeated, tag = "1")]
    pub list: ::prost::alloc::vec::Vec<Mulkeyvalue>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17511)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs17511 {
    #[prost(uint32, required, tag = "2")]
    pub action: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AttireInfo {
    #[prost(uint32, required, tag = "2")]
    pub end_time: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DiscussInfo {
    #[prost(uint32, required, tag = "2")]
    pub discuss_count: u32,
    #[prost(uint32, required, tag = "1")]
    pub ship_group_id: u32,
    #[prost(uint32, required, tag = "3")]
    pub heart_count: u32,
    #[prost(message, repeated, tag = "4")]
    pub discuss_list: ::prost::alloc::vec::Vec<DiscussInfo>,
    #[prost(uint32, required, tag = "5")]
    pub daily_discuss_count: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17203)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs17203 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17504)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc17504 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Voteinfo {
    #[prost(uint32, required, tag = "2")]
    pub count: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17402)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc17402 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17503)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs17503 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17502)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc17502 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(17108)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc17108 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}