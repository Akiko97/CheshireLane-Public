// This file is @generated by prost-build.
#[derive(proto_derive::CmdID)]
#[cmdid(12029)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs12029 {
    #[prost(uint32, required, tag = "2")]
    pub num: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12031)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12031 {
    #[prost(uint32, required, tag = "1")]
    pub energy_auto_increase_time: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12039)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12039 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12205)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12205 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12002)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs12002 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub count: u32,
    #[prost(uint32, required, tag = "3")]
    pub costtype: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12101)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc12101 {
    #[prost(message, repeated, tag = "1")]
    pub group_list: ::prost::alloc::vec::Vec<Groupinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12103)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12103 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12204)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs12204 {
    #[prost(uint32, required, tag = "1")]
    pub flag: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct BuildInfo {
    #[prost(uint32, required, tag = "1")]
    pub pos: u32,
    #[prost(uint32, required, tag = "2")]
    pub tid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12007)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12007 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12005)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc12005 {
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub ship_id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12025)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs12025 {
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub pos_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12033)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12033 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(uint32, required, tag = "2")]
    pub time: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12046)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12046 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12106)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc12106 {
    #[prost(message, required, tag = "1")]
    pub group: Groupinfo,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12206)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs12206 {
    #[prost(uint32, required, tag = "1")]
    pub flag: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12040)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs12040 {
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
    #[prost(uint32, required, tag = "2")]
    pub flag: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12208)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs12208 {
    #[prost(uint32, repeated, packed = "false", tag = "1")]
    pub add_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub del_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12012)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12012 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12047)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs12047 {
    #[prost(uint32, required, tag = "1")]
    pub ship_tid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12044)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc12044 {
    #[prost(message, repeated, tag = "1")]
    pub info_list: ::prost::alloc::vec::Vec<BuildInfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12019)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12019 {
    #[prost(uint32, required, tag = "1")]
    pub intimacy: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12207)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12207 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12105)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12105 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12202)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs12202 {
    #[prost(uint32, required, tag = "2")]
    pub skin_id: u32,
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12020)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs12020 {
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12104)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs12104 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(string, required, tag = "2")]
    pub name: ::prost::alloc::string::String,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12026)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc12026 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub ship_list: ::prost::alloc::vec::Vec<super::common::Shipinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12036)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs12036 {
    #[prost(uint32, required, tag = "3")]
    pub pos: u32,
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
    #[prost(uint32, required, tag = "2")]
    pub equip_skin_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12009)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc12009 {
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub pos_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12022)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs12022 {
    #[prost(uint32, required, tag = "2")]
    pub is_locked: u32,
    #[prost(uint32, repeated, packed = "false", tag = "1")]
    pub ship_id_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12043)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs12043 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12045)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs12045 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12021)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12021 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12201)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc12201 {
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub forbidden_skin_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, packed = "false", tag = "3")]
    pub forbidden_skin_type: ::prost::alloc::vec::Vec<u32>,
    #[prost(message, repeated, tag = "1")]
    pub skin_list: ::prost::alloc::vec::Vec<super::common::Idtimeinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12004)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs12004 {
    #[prost(uint32, repeated, packed = "false", tag = "1")]
    pub ship_id_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12209)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12209 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12027)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs12027 {
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub material_id_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12041)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12041 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12011)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs12011 {
    #[prost(uint32, required, tag = "2")]
    pub remould_id: u32,
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
    #[prost(uint32, repeated, packed = "false", tag = "3")]
    pub material_id: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12024)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc12024 {
    #[prost(uint32, required, tag = "1")]
    pub worklist_count: u32,
    #[prost(uint32, required, tag = "4")]
    pub draw_count_10: u32,
    #[prost(uint32, required, tag = "3")]
    pub draw_count_1: u32,
    #[prost(message, repeated, tag = "2")]
    pub worklist_list: ::prost::alloc::vec::Vec<super::common::Buildinfo>,
    #[prost(uint32, required, tag = "5")]
    pub exchange_count: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12032)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs12032 {
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12006)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs12006 {
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
    #[prost(uint32, required, tag = "2")]
    pub equip_id: u32,
    #[prost(uint32, required, tag = "3")]
    pub pos: u32,
    #[prost(uint32, required, tag = "4")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12030)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc12030 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub ship_list: ::prost::alloc::vec::Vec<super::common::Shipinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12023)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12023 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12301)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs12301 {
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub id_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12003)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc12003 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub build_info: ::prost::alloc::vec::Vec<super::common::Buildinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12001)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc12001 {
    #[prost(message, repeated, tag = "1")]
    pub shiplist: ::prost::alloc::vec::Vec<super::common::Shipinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12042)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc12042 {
    #[prost(message, repeated, tag = "1")]
    pub ship_list: ::prost::alloc::vec::Vec<super::common::Shipinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12302)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc12302 {
    #[prost(message, repeated, tag = "1")]
    pub ship_list: ::prost::alloc::vec::Vec<super::common::Shipinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12034)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs12034 {
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
    #[prost(string, required, tag = "2")]
    pub name: ::prost::alloc::string::String,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12037)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12037 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12018)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12018 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12035)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12035 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12102)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs12102 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub ship_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12028)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12028 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12017)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs12017 {
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub material_id_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Groupinfo {
    #[prost(message, repeated, tag = "4")]
    pub commanders: ::prost::alloc::vec::Vec<super::common::Commandersinfo>,
    #[prost(string, required, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(uint32, repeated, packed = "false", tag = "3")]
    pub ship_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12048)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc12048 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub drop_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12008)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs12008 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub pos_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12299)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs12299 {
    #[prost(uint32, required, tag = "1")]
    pub num: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12010)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc12010 {
    #[prost(message, repeated, tag = "1")]
    pub ship_list: ::prost::alloc::vec::Vec<super::common::Shipinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12038)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs12038 {
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(12203)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc12203 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}