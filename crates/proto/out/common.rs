// This file is @generated by prost-build.
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kvdata2 {
    #[prost(uint32, required, tag = "1")]
    pub key: u32,
    #[prost(uint32, required, tag = "2")]
    pub value1: u32,
    #[prost(uint32, required, tag = "3")]
    pub value2: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct StrengthInfo {
    #[prost(uint32, required, tag = "2")]
    pub exp: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Shipskill {
    #[prost(uint32, required, tag = "2")]
    pub skill_lv: u32,
    #[prost(uint32, required, tag = "1")]
    pub skill_id: u32,
    #[prost(uint32, required, tag = "3")]
    pub skill_exp: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Usersimpleinfo {
    #[prost(uint32, required, tag = "3")]
    pub lv: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(string, required, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(message, required, tag = "4")]
    pub display: Displayinfo,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Shipcoreinfo {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub exp: u32,
    #[prost(message, repeated, tag = "3")]
    pub model_list: ::prost::alloc::vec::Vec<Shipmodelinfo>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Commanderinfo {
    #[prost(uint32, required, tag = "8")]
    pub ability_time: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, optional, tag = "15")]
    pub home_feed_time: ::core::option::Option<u32>,
    #[prost(uint32, repeated, packed = "false", tag = "6")]
    pub ability: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "4")]
    pub exp: u32,
    #[prost(string, required, tag = "11")]
    pub name: ::prost::alloc::string::String,
    #[prost(message, repeated, tag = "9")]
    pub skill: ::prost::alloc::vec::Vec<Skillinfo>,
    #[prost(uint32, required, tag = "10")]
    pub used_pt: u32,
    #[prost(uint32, required, tag = "3")]
    pub level: u32,
    #[prost(uint32, optional, tag = "13")]
    pub home_clean_time: ::core::option::Option<u32>,
    #[prost(uint32, required, tag = "2")]
    pub template_id: u32,
    #[prost(uint32, required, tag = "5")]
    pub is_locked: u32,
    #[prost(uint32, repeated, packed = "false", tag = "7")]
    pub ability_origin: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "12")]
    pub rename_time: u32,
    #[prost(uint32, optional, tag = "14")]
    pub home_play_time: ::core::option::Option<u32>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Shipgrouppos {
    #[prost(uint32, required, tag = "2")]
    pub pos: u32,
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Shipstate {
    #[prost(uint32, optional, tag = "5")]
    pub state_info_4: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "4")]
    pub state_info_3: ::core::option::Option<u32>,
    #[prost(uint32, required, tag = "1")]
    pub state: u32,
    #[prost(uint32, optional, tag = "2")]
    pub state_info_1: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "3")]
    pub state_info_2: ::core::option::Option<u32>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct TransformInfo {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub level: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Buildinfo {
    #[prost(uint32, required, tag = "3")]
    pub build_id: u32,
    #[prost(uint32, required, tag = "1")]
    pub time: u32,
    #[prost(uint32, required, tag = "2")]
    pub finish_time: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fleetinfo {
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub ship_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(message, repeated, tag = "3")]
    pub commanders: ::prost::alloc::vec::Vec<Commandersinfo>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Collectioninfo {
    #[prost(uint32, required, tag = "3")]
    pub over_time: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub finish_time: u32,
    #[prost(uint32, repeated, packed = "false", tag = "4")]
    pub ship_id_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Skillinfo {
    #[prost(uint32, required, tag = "2")]
    pub exp: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Commandersinfo {
    #[prost(uint32, required, tag = "1")]
    pub pos: u32,
    #[prost(uint32, required, tag = "2")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct EquipskinInfo {
    #[prost(uint32, required, tag = "2")]
    pub skin_id: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Shipinfo {
    #[prost(message, repeated, tag = "10")]
    pub skill_id_list: ::prost::alloc::vec::Vec<Shipskill>,
    #[prost(uint32, required, tag = "8")]
    pub is_locked: u32,
    #[prost(uint32, required, tag = "15")]
    pub skin_id: u32,
    #[prost(string, optional, tag = "17")]
    pub name: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(uint32, optional, tag = "22")]
    pub common_flag: ::core::option::Option<u32>,
    #[prost(message, optional, tag = "26")]
    pub spweapon: ::core::option::Option<Spweaponinfo>,
    #[prost(uint32, required, tag = "3")]
    pub level: u32,
    #[prost(uint32, required, tag = "6")]
    pub energy: u32,
    #[prost(uint32, required, tag = "2")]
    pub template_id: u32,
    #[prost(uint32, repeated, packed = "false", tag = "24")]
    pub meta_repair_list: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(message, repeated, tag = "9")]
    pub transform_list: ::prost::alloc::vec::Vec<TransformInfo>,
    #[prost(message, repeated, tag = "25")]
    pub core_list: ::prost::alloc::vec::Vec<Shipcoreinfo>,
    #[prost(uint32, required, tag = "23")]
    pub activity_npc: u32,
    #[prost(uint32, optional, tag = "18")]
    pub change_name_timestamp: ::core::option::Option<u32>,
    #[prost(uint32, required, tag = "21")]
    pub blue_print_flag: u32,
    #[prost(uint32, required, tag = "19")]
    pub commanderid: u32,
    #[prost(message, repeated, tag = "13")]
    pub strength_list: ::prost::alloc::vec::Vec<StrengthInfo>,
    #[prost(uint32, required, tag = "20")]
    pub max_level: u32,
    #[prost(uint32, required, tag = "16")]
    pub propose: u32,
    #[prost(uint32, required, tag = "4")]
    pub exp: u32,
    #[prost(uint32, required, tag = "12")]
    pub proficiency: u32,
    #[prost(message, repeated, tag = "5")]
    pub equip_info_list: ::prost::alloc::vec::Vec<EquipskinInfo>,
    #[prost(uint32, required, tag = "11")]
    pub intimacy: u32,
    #[prost(uint32, required, tag = "14")]
    pub create_time: u32,
    #[prost(message, required, tag = "7")]
    pub state: Shipstate,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Dropinfo {
    #[prost(uint32, required, tag = "3")]
    pub number: u32,
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
    #[prost(uint32, required, tag = "2")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Displayinfo {
    #[prost(uint32, required, tag = "2")]
    pub skin: u32,
    #[prost(uint32, required, tag = "3")]
    pub icon_frame: u32,
    #[prost(uint32, required, tag = "4")]
    pub chat_frame: u32,
    #[prost(uint32, required, tag = "1")]
    pub icon: u32,
    #[prost(uint32, required, tag = "5")]
    pub icon_theme: u32,
    #[prost(uint32, required, tag = "6")]
    pub marry_flag: u32,
    #[prost(uint32, required, tag = "7")]
    pub transform_flag: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Appreciationinfo {
    #[prost(uint32, repeated, packed = "false", tag = "1")]
    pub gallerys: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, packed = "false", tag = "3")]
    pub favor_gallerys: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub musics: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, repeated, packed = "false", tag = "4")]
    pub favor_musics: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Taskinfo {
    #[prost(uint32, required, tag = "3")]
    pub accept_time: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub progress: u32,
    #[prost(uint32, required, tag = "4")]
    pub submit_time: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct RefundShopinfo {
    #[prost(uint32, required, tag = "1")]
    pub shop_id: u32,
    #[prost(uint32, required, tag = "2")]
    pub buy_time: u32,
    #[prost(uint32, required, tag = "3")]
    pub refund_time: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Kvdata {
    #[prost(uint32, required, tag = "1")]
    pub key: u32,
    #[prost(uint32, required, tag = "2")]
    pub value: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Attrinfo {
    #[prost(uint32, required, tag = "1")]
    pub level: u32,
    #[prost(uint32, required, tag = "2")]
    pub exp: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Shipmodelinfo {
    #[prost(uint32, required, tag = "2")]
    pub id: u32,
    #[prost(uint32, required, tag = "1")]
    pub pos: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ItemInfo {
    #[prost(uint32, required, tag = "2")]
    pub num: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Spweaponinfo {
    #[prost(uint32, required, tag = "6")]
    pub attr_temp_2: u32,
    #[prost(uint32, required, tag = "7")]
    pub effect: u32,
    #[prost(uint32, required, tag = "2")]
    pub template_id: u32,
    #[prost(uint32, required, tag = "8")]
    pub pt: u32,
    #[prost(uint32, required, tag = "5")]
    pub attr_temp_1: u32,
    #[prost(uint32, required, tag = "4")]
    pub attr_2: u32,
    #[prost(uint32, required, tag = "3")]
    pub attr_1: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Idtimeinfo {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub time: u32,
}