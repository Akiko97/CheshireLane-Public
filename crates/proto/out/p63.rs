// This file is @generated by prost-build.
#[derive(proto_derive::CmdID)]
#[cmdid(63009)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63009 {
    #[prost(uint32, required, tag = "2")]
    pub target: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63004)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc63004 {
    #[prost(message, repeated, tag = "4")]
    pub drop_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub common_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(message, repeated, tag = "5")]
    pub catchup_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(message, repeated, tag = "6")]
    pub catchupact_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(message, repeated, tag = "3")]
    pub refresh_list: ::prost::alloc::vec::Vec<Technologyrefresh>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63012)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc63012 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63000)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc63000 {
    #[prost(message, repeated, tag = "1")]
    pub refresh_list: ::prost::alloc::vec::Vec<Technologyrefresh>,
    #[prost(uint32, required, tag = "2")]
    pub refresh_flag: u32,
    #[prost(message, repeated, tag = "4")]
    pub queue: ::prost::alloc::vec::Vec<Technologyinfo>,
    #[prost(message, required, tag = "3")]
    pub catchup: Technologycatchup,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63213)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc63213 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Techpursuing {
    #[prost(uint32, required, tag = "1")]
    pub version: u32,
    #[prost(uint32, required, tag = "2")]
    pub number: u32,
    #[prost(message, repeated, tag = "3")]
    pub dr_numbers: ::prost::alloc::vec::Vec<DrNumber>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63215)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc63215 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, optional, tag = "2")]
    pub ship: ::core::option::Option<super::common::Shipinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63008)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc63008 {
    #[prost(message, repeated, tag = "2")]
    pub refresh_list: ::prost::alloc::vec::Vec<Technologyrefresh>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63310)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc63310 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(uint32, required, tag = "2")]
    pub switch_cnt: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63206)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63206 {
    #[prost(uint32, required, tag = "1")]
    pub blueprint_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63201)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc63201 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(uint32, required, tag = "2")]
    pub time: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SkillInfo {
    #[prost(uint32, required, tag = "5")]
    pub day_exp: u32,
    #[prost(uint32, required, tag = "6")]
    pub add_exp: u32,
    #[prost(uint32, required, tag = "2")]
    pub skill_id: u32,
    #[prost(uint32, required, tag = "3")]
    pub skill_level: u32,
    #[prost(uint32, required, tag = "4")]
    pub skill_exp: u32,
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63319)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs63319 {
    #[prost(uint32, required, tag = "2")]
    pub skill_id: u32,
    #[prost(message, repeated, tag = "3")]
    pub books: ::prost::alloc::vec::Vec<super::common::ItemInfo>,
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63203)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc63203 {
    #[prost(message, optional, tag = "2")]
    pub ship: ::core::option::Option<super::common::Shipinfo>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63211)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc63211 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63002)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc63002 {
    #[prost(uint32, required, tag = "2")]
    pub time: u32,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63301)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63301 {
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
    #[prost(uint32, required, tag = "2")]
    pub repair_id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SkillExp {
    #[prost(uint32, required, tag = "2")]
    pub exp: u32,
    #[prost(uint32, required, tag = "1")]
    pub skill_id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Technologyinfo {
    #[prost(uint32, required, tag = "2")]
    pub time: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63007)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63007 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63100)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc63100 {
    #[prost(uint32, required, tag = "3")]
    pub daily_catchup_strengthen: u32,
    #[prost(message, repeated, tag = "1")]
    pub blueprint_list: ::prost::alloc::vec::Vec<Bluprintinfo>,
    #[prost(uint32, required, tag = "4")]
    pub daily_catchup_strengthen_ur: u32,
    #[prost(uint32, required, tag = "2")]
    pub cold_time: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63307)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63307 {
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
    #[prost(uint32, required, tag = "2")]
    pub skill_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63316)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc63316 {
    #[prost(message, repeated, tag = "1")]
    pub skill_info_list: ::prost::alloc::vec::Vec<SkillInfo>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Bluprintinfo {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub ship_id: u32,
    #[prost(uint32, required, tag = "3")]
    pub start_time: u32,
    #[prost(uint32, required, tag = "4")]
    pub blue_print_level: u32,
    #[prost(uint32, required, tag = "5")]
    pub exp: u32,
    #[prost(uint32, optional, tag = "6")]
    pub start_duration: ::core::option::Option<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63320)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc63320 {
    #[prost(uint32, required, tag = "1")]
    pub ret: u32,
    #[prost(uint32, optional, tag = "3")]
    pub exp: ::core::option::Option<u32>,
    #[prost(uint32, optional, tag = "2")]
    pub level: ::core::option::Option<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63001)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63001 {
    #[prost(uint32, required, tag = "1")]
    pub tech_id: u32,
    #[prost(uint32, required, tag = "2")]
    pub refresh_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63013)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63013 {
    #[prost(uint32, required, tag = "2")]
    pub refresh_id: u32,
    #[prost(uint32, required, tag = "1")]
    pub tech_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63212)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63212 {
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
    #[prost(uint32, required, tag = "2")]
    pub count: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63305)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63305 {
    #[prost(uint32, required, tag = "1")]
    pub meta_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63010)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc63010 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63214)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63214 {
    #[prost(uint32, required, tag = "1")]
    pub group: u32,
    #[prost(uint32, required, tag = "2")]
    pub itemid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63300)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc63300 {
    #[prost(message, repeated, tag = "1")]
    pub meta_char_list: ::prost::alloc::vec::Vec<Metacharinfo>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct FinishTask {
    #[prost(uint32, required, tag = "3")]
    pub finish_cnt: u32,
    #[prost(uint32, required, tag = "1")]
    pub skill_id: u32,
    #[prost(uint32, required, tag = "2")]
    pub task_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63315)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc63315 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
    #[prost(uint32, repeated, packed = "false", tag = "2")]
    pub arg1: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63205)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc63205 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63318)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc63318 {
    #[prost(message, repeated, tag = "1")]
    pub info_list: ::prost::alloc::vec::Vec<MetaSkillSimpleInfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63202)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63202 {
    #[prost(uint32, required, tag = "1")]
    pub blueprint_id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Metacharinfo {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub syn_rate: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63006)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc63006 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63302)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc63302 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63011)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63011 {
    #[prost(uint32, required, tag = "2")]
    pub target: u32,
    #[prost(uint32, required, tag = "1")]
    pub version: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63014)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc63014 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, repeated, tag = "2")]
    pub refresh_list: ::prost::alloc::vec::Vec<Technologyrefresh>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63209)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc63209 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63210)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63210 {
    #[prost(uint32, required, tag = "3")]
    pub number: u32,
    #[prost(uint32, required, tag = "2")]
    pub itemid: u32,
    #[prost(uint32, required, tag = "4")]
    pub task_id: u32,
    #[prost(uint32, required, tag = "1")]
    pub blueprintid: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63314)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc63314 {
    #[prost(uint32, required, tag = "2")]
    pub double_exp: u32,
    #[prost(uint32, required, tag = "6")]
    pub switch_cnt: u32,
    #[prost(message, repeated, tag = "7")]
    pub skill_exp: ::prost::alloc::vec::Vec<SkillExp>,
    #[prost(uint32, required, tag = "3")]
    pub exp: u32,
    #[prost(message, repeated, tag = "5")]
    pub tasks: ::prost::alloc::vec::Vec<FinishTask>,
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
    #[prost(uint32, required, tag = "4")]
    pub skill_id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Technologycatchup {
    #[prost(uint32, required, tag = "1")]
    pub version: u32,
    #[prost(message, repeated, tag = "3")]
    pub pursuings: ::prost::alloc::vec::Vec<Techpursuing>,
    #[prost(uint32, required, tag = "2")]
    pub target: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63303)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63303 {
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63311)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63311 {
    #[prost(uint32, required, tag = "2")]
    pub skill_id: u32,
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
    #[prost(uint32, required, tag = "3")]
    pub index: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63204)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63204 {
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
    #[prost(uint32, required, tag = "2")]
    pub count: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct DrNumber {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub number: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63200)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63200 {
    #[prost(uint32, required, tag = "1")]
    pub blueprint_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63312)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc63312 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63003)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63003 {
    #[prost(uint32, required, tag = "2")]
    pub refresh_id: u32,
    #[prost(uint32, required, tag = "1")]
    pub tech_id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Technologydrop {
    #[prost(message, repeated, tag = "3")]
    pub catchup_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(message, repeated, tag = "2")]
    pub drop_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(message, repeated, tag = "4")]
    pub catchupact_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(message, repeated, tag = "1")]
    pub common_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63207)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc63207 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63306)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc63306 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(message, optional, tag = "2")]
    pub ship: ::core::option::Option<super::common::Shipinfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63308)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc63308 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
    #[prost(uint32, required, tag = "2")]
    pub switch_cnt: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63015)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63015 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63309)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63309 {
    #[prost(uint32, required, tag = "2")]
    pub skill_id: u32,
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63313)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63313 {
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63016)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc63016 {
    #[prost(message, repeated, tag = "2")]
    pub drops: ::prost::alloc::vec::Vec<Technologydrop>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63208)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63208 {
    #[prost(uint32, required, tag = "1")]
    pub blueprint_id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63317)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs63317 {
    #[prost(uint32, repeated, packed = "false", tag = "1")]
    pub ship_id_list: ::prost::alloc::vec::Vec<u32>,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Technologyrefresh {
    #[prost(uint32, required, tag = "2")]
    pub target: u32,
    #[prost(message, repeated, tag = "3")]
    pub technologys: ::prost::alloc::vec::Vec<Technologyinfo>,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63304)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc63304 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MetaSkillSimpleInfo {
    #[prost(uint32, required, tag = "3")]
    pub skill_id: u32,
    #[prost(uint32, required, tag = "1")]
    pub ship_id: u32,
    #[prost(uint32, required, tag = "2")]
    pub exp: u32,
    #[prost(message, repeated, tag = "4")]
    pub skill_exp: ::prost::alloc::vec::Vec<SkillExp>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(63005)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs63005 {
    #[prost(uint32, required, tag = "1")]
    pub tech_id: u32,
    #[prost(uint32, required, tag = "2")]
    pub refresh_id: u32,
}