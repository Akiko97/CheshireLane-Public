// This file is @generated by prost-build.
#[derive(proto_derive::CmdID)]
#[cmdid(15007)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc15007 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(15003)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc15003 {
    #[prost(message, repeated, tag = "2")]
    pub drop_list: ::prost::alloc::vec::Vec<super::common::Dropinfo>,
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(15005)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc15005 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(15004)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs15004 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub count: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(15013)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc15013 {
    #[prost(message, repeated, tag = "1")]
    pub ret_list: ::prost::alloc::vec::Vec<Sc15003>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(15006)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs15006 {
    #[prost(uint32, required, tag = "2")]
    pub num: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(15008)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs15008 {
    #[prost(message, repeated, tag = "1")]
    pub item_list: ::prost::alloc::vec::Vec<Iteminfo>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(15010)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Cs15010 {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(15001)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Sc15001 {
    #[prost(message, repeated, tag = "1")]
    pub item_list: ::prost::alloc::vec::Vec<Iteminfo>,
    #[prost(message, repeated, tag = "2")]
    pub limit_list: ::prost::alloc::vec::Vec<Iteminfo>,
    #[prost(message, repeated, tag = "3")]
    pub item_misc_list: ::prost::alloc::vec::Vec<Itemmisc>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(15002)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs15002 {
    #[prost(uint32, required, tag = "2")]
    pub count: u32,
    #[prost(uint32, repeated, packed = "false", tag = "3")]
    pub arg: ::prost::alloc::vec::Vec<u32>,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Iteminfo {
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
    #[prost(uint32, required, tag = "2")]
    pub count: u32,
}
#[derive(proto_derive::CmdID)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Itemmisc {
    #[prost(uint32, required, tag = "2")]
    pub data: u32,
    #[prost(uint32, required, tag = "1")]
    pub id: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(15012)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs15012 {
    #[prost(message, repeated, tag = "1")]
    pub use_list: ::prost::alloc::vec::Vec<Cs15002>,
}
#[derive(proto_derive::CmdID)]
#[cmdid(15009)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc15009 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}
#[derive(proto_derive::CmdID)]
#[cmdid(15300)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Cs15300 {
    #[prost(uint32, required, tag = "1")]
    pub r#type: u32,
    #[prost(string, required, tag = "2")]
    pub ver_str: ::prost::alloc::string::String,
}
#[derive(proto_derive::CmdID)]
#[cmdid(15011)]
#[derive(serde::Serialize, serde::Deserialize)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Sc15011 {
    #[prost(uint32, required, tag = "1")]
    pub result: u32,
}